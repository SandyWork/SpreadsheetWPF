<Window Initialized="win_main_Initialized" WindowStartupLocation="CenterOwner"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpreadsheetWPF.gridData" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:mui="http://firstfloorsoftware.com/ModernUI"
        x:Name="win_main"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Class="gridData.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" SizeChanged="resizeWindow" MinWidth="500" MinHeight="500"  Width="500" Height="500"  Icon="New Job-96.ico">



    <Window.Resources>
        <local:PresentData  x:Key="presentData"/>

        <CollectionViewSource x:Key="cvsTasks" Source="{StaticResource presentData}"
                              Filter="CollectionViewSource_Filter">
        </CollectionViewSource>
    </Window.Resources>

    <DockPanel x:Name="pnl_dock" Width="500" Height="500" >

        <Grid x:Name="grid1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TabControl Grid.Row="0" Grid.RowSpan="2" FontWeight="Bold" Margin="0,0,0,-15" Background="White">
                <TabItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TabItem.Background>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="#FFF0F0F0" Offset="0"/>
                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                        </LinearGradientBrush>
                    </TabItem.Background>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">

                            <Image Source="/Menu1.png" Width="20" Height="20" >
                                <Image.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Image.OpacityMask>
                            </Image>
                            <TextBlock Text=" Menu1" FontWeight="Normal" FontSize="14" />
                        </StackPanel>
                    </TabItem.Header>
                    <StackPanel x:Name="stckpnl_menu1" Width="Auto" Height="Auto" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" x:Name="btn_import" Click="btn_import_Click" Background="White">
                                <Image Source="import-icon.png" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="20" MinHeight="20" MaxWidth="60" MaxHeight="60"/>
                            </Button>

                            <Label Content="Import Excel" HorizontalAlignment="Center" FontWeight="Normal" FontSize="13" />
                        </StackPanel>
                        <Separator Width="15" Opacity="0"/>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" x:Name="btn_export" Click="btn_export_Click" Background="White">
                                <Image Source="export-icon.png"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="20" MinHeight="20" MaxWidth="60" MaxHeight="60"/>
                            </Button>
                            <Label Content="Export Excel" HorizontalAlignment="Center" FontWeight="Normal" FontSize="13" />
                        </StackPanel>
                    </StackPanel>

                </TabItem>
                <TabItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Image Source="/Menu2.png" Width="20" Height="20" >
                                <Image.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Image.OpacityMask>
                            </Image>
                            <TextBlock Text=" Menu2" FontWeight="Normal" FontSize="14" VerticalAlignment="Center" />
                        </StackPanel>
                    </TabItem.Header>

                    <StackPanel x:Name="stckpnl_menu2" Width="Auto"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto"  Orientation="Horizontal">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Name="btn_save" Click="btn_save_Click" Background="White">
                                <Button.Content>
                                    <Image Source="/menu2.png"  MinWidth="20" MinHeight="20" MaxWidth="60" MaxHeight="60"/>
                                </Button.Content>
                            </Button>
                            <Label Content="Save" HorizontalAlignment="Center" FontWeight="Normal" FontSize="13" />
                        </StackPanel>
                        <Separator Width="15" Opacity="0"/>

                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Name="btn_validate" Click="btn_validate_Click" Background="White">
                                <Button.Content>
                                    <Image Source="validate.jpg" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="20" MinHeight="20" MaxWidth="60" MaxHeight="60"/>
                                </Button.Content>
                            </Button>
                            <Label Content="Validate" HorizontalAlignment="Center" FontWeight="Normal" FontSize="13" />
                        </StackPanel>
                        <Separator Width="15"  Opacity="0"/>

                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Button BorderThickness="0" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Name="btn_close" Click="btn_close_Click" Background="White">
                                <Button.Content>
                                    <Image Source="close.png"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="20" MinHeight="20" MaxWidth="60" MaxHeight="60"/>
                                </Button.Content>
                            </Button>
                            <Label Content="Close" HorizontalAlignment="Center" FontWeight="Normal" FontSize="13" />
                        </StackPanel>
                    </StackPanel>
                </TabItem>

            </TabControl>
            <ScrollViewer   x:Name="scrlVw_grid" HorizontalAlignment='Stretch' VerticalAlignment='Stretch' HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Grid.Row="2" Grid.RowSpan="7" Margin="0,15,0,30" >
                <DataGrid   SelectionUnit="CellOrRowHeader" SelectionMode="Extended" HorizontalAlignment="Stretch"
                      x:Name="dg_grid1"
                      AutoGenerateColumns="False"
                        ColumnWidth="80"
                        CanUserReorderColumns="False"
                        CanUserSortColumns="True"
                        CanUserAddRows="True"
                        CanUserDeleteRows="True"
                        CanUserResizeColumns="True" FontSize="14" RowHeaderWidth="10"
                        ItemsSource="{Binding Source={StaticResource cvsTasks}}"
                        IsSynchronizedWithCurrentItem="True" Foreground="Black" Background="#FFF5EDED"
                        >

                    <!-- This is required to handle CTRL + C when something is selected in the DataGrid -->
                    <DataGrid.CommandBindings>
                        <CommandBinding Command="Copy" Executed="CopyCommand" />
                        <CommandBinding Command="Cut" x:Name="CutCommand" Executed="CutCommand_Executed" />
                        <CommandBinding Command="Paste" x:Name="PasteCommand" Executed="PasteCommand_Executed" />
                    </DataGrid.CommandBindings>

                    <!-- This is required to handle CTRL + C when something is selected in the DataGrid -->
                    <DataGrid.InputBindings>
                        <KeyBinding Key="C" Modifiers="Control" Command="Copy" />
                        <KeyBinding Key="X" Modifiers="Control" Command="Cut" />
                        <KeyBinding Key="V" Modifiers="Control" Command="Paste" />
                    </DataGrid.InputBindings>

                    <DataGrid.Resources x:Uid="resources">
                        <ContextMenu x:Key="colHeaderContextMenu">
                            <MenuItem Header="Filter Column" Click="menuFilter_Click"  x:Name="menuFilter">
                            </MenuItem>
                        </ContextMenu>
                        <ContextMenu x:Key="rowHeaderContextMenu">
                            <MenuItem Header="Add Row" Click="addRowHeader_Click"  x:Name="addRowHeader"/>
                            <MenuItem Header="Delete Row" Click="deleteRowHeader_Click"  x:Name="deleteRowHeader"/>
                        </ContextMenu>
                        <ContextMenu  x:Key="rowContextMenu" x:Name="rowContextMenu">
                            <MenuItem Header="Copy" x:Name="copyCells" Click="copyCells_Click" />
                            <MenuItem Header="Paste" x:Name="pasteCells"  Click="pasteCells_Click" ></MenuItem>
                            <MenuItem Header="Highlight" x:Name="highlightCells" Click="highlightCells_Click" ></MenuItem>
                        </ContextMenu>
                    </DataGrid.Resources>

                    <!-- Styles to change column header in vertical orientation-->
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="270"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContextMenu" Value="{StaticResource colHeaderContextMenu}"/>
                        </Style>

                    </DataGrid.ColumnHeaderStyle>
                    <!-- Styles to change column header in vertical orientation-->

                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <Setter Property="ContextMenu" Value="{StaticResource rowContextMenu}"/>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}" BasedOn="{StaticResource {x:Type DataGridRowHeader}}">
                            <Setter Property="ContextMenu" Value="{StaticResource rowHeaderContextMenu}"/>
                        </Style>
                    </DataGrid.RowHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn  Binding="{Binding Path = name}" x:Name="dgtxtcol_nam" Header="Name"/>
                        <DataGridTextColumn  Binding="{Binding Path = selection}" x:Name="dgtxtcol_sel" Header="Selection"/>
                        <DataGridTextColumn Binding="{Binding Path = attribute1}" x:Name="dgtxtcol_attri1" Header="Attribute1"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute2}" x:Name="dgtxtcol_attri2" Header="Attribute2"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute3}" x:Name="dgtxtcol_attri3" Header="Attribute3"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute4}" x:Name="dgtxtcol_attri4" Header="Attribute4"/>
                        <DataGridTextColumn  Binding="{Binding Path = unitattri4}" x:Name="dgtxtcol_unitattri4" Header="Unit_Attri4"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute5}" x:Name="dgtxtcol_attri5" Header="Attribute5"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute6}" x:Name="dgtxtcol_attri6" Header="Attribute6"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute7}" x:Name="dgtxtcol_attri7" Header="Attribute7"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute8}" x:Name="dgtxtcol_attri8" Header="Attribute8"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute9}" x:Name="dgtxtcol_attri9" Header="Attribute9"/>
                        <DataGridTextColumn  Binding="{Binding Path = attribute10}" x:Name="dgtxtcol_attri10" Header="Attribute10"/>
                        <DataGridTextColumn Binding="{Binding Path = minVal, TargetNullValue={x:Static sys:String.Empty}}" x:Name="dgtxtcol_minval" Header="MinimumVal"/>
                        <DataGridTextColumn  Binding="{Binding Path = normVal, TargetNullValue={x:Static sys:String.Empty}}" x:Name="dgtxtcol_normval" Header="NormalVal"/>
                        <DataGridTextColumn Binding="{Binding Path = maxVal, TargetNullValue={x:Static sys:String.Empty}}" x:Name="dgtxtcol_maxval" Header="MaximumVal"/>

                        <DataGridTemplateColumn Header="Add Row">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="btn_edit_row" Content="Add" Click="btn_edit_row_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Delete Row">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="btn_delete_row" Content="Delete" Click="btn_delete_row_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ScrollViewer>
            <StackPanel Orientation ="Vertical"  Grid.Row="8" Margin="25,34,0,39" VerticalAlignment="Center" Grid.RowSpan="2" Background="White">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Apply Filter " VerticalAlignment="Center" />
                    <CheckBox x:Name="cbCompleteFilter" IsEnabled="False" VerticalAlignment="Center"
                      Checked="CompleteFilter_Changed" Unchecked="CompleteFilter_Changed" />
                    <Label x:Name="filterStatus" Content="Currently No Filters Have Been Applied" TextBlock.Foreground="Red" VerticalAlignment="Center" Margin="100,0,0,0"/>
                    
                </StackPanel>
                    <Label x:Name="errorStatus" Content="" TextBlock.Foreground="Red" VerticalAlignment="Center" Margin="100,-7,0,0"/>
            </StackPanel>
            

        </Grid>

    </DockPanel>
</Window>
